[
    {
        "BriefDescription": "Clears due to Unknown Branches.",
        "EventCode": "0x60",
        "EventName": "BACLEARS.ANY",
        "PublicDescription": "Number of times the front-end is resteered when it finds a branch instruction in a fetch line. This is called Unknown Branch which occurs for the first time a branch instruction is fetched or when the branch is not tracked by the BPU (Branch Prediction Unit) anymore.",
        "SampleAfterValue": "100003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of baclears, including but not limited to JCC, RETURN, unconditional and indirect baclears.",
        "EventCode": "0xe6",
        "EventName": "BACLEARS.ANY",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of JCC baclears",
        "EventCode": "0xe6",
        "EventName": "BACLEARS.COND",
        "SampleAfterValue": "200003",
        "UMask": "0x10",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number indirect branch baclears",
        "EventCode": "0xe6",
        "EventName": "BACLEARS.INDIRECT",
        "SampleAfterValue": "200003",
        "UMask": "0x2",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of RETURN baclears",
        "EventCode": "0xe6",
        "EventName": "BACLEARS.RETURN",
        "SampleAfterValue": "200003",
        "UMask": "0x8",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number non-indirect unconditional branch baclears",
        "EventCode": "0xe6",
        "EventName": "BACLEARS.UNCOND",
        "SampleAfterValue": "200003",
        "UMask": "0x4",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Stalls caused by changing prefix length of the instruction.",
        "EventCode": "0x87",
        "EventName": "DECODE.LCP",
        "PublicDescription": "Counts cycles that the Instruction Length decoder (ILD) stalls occurred due to dynamically changing prefix length of the decoded instruction (by operand size prefix instruction 0x66, address size prefix instruction 0x67 or REX.W for Intel64). Count is proportional to the number of prefixes in a 16B-line. This may result in a three-cycle penalty for each LCP (Length changing prefix) in a 16-byte chunk.",
        "SampleAfterValue": "500009",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles the Microcode Sequencer is busy.",
        "EventCode": "0x87",
        "EventName": "DECODE.MS_BUSY",
        "SampleAfterValue": "500009",
        "UMask": "0x2",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "DECODE.REGEN",
        "EventCode": "0x87",
        "EventName": "DECODE.REGEN",
        "SampleAfterValue": "500009",
        "UMask": "0x8",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of major decode penalties.",
        "EventCode": "0xe9",
        "EventName": "DECODE_RESTRICTION.ANY",
        "PublicDescription": "Counts the number of major decode penalties.  This includes but is not limited to penalties associated with PREDECODE_WRONG, MS_DECODED.MS_ENTRY, >4 prefix/escape bytes on an instruction, or too many branches at the same time.   The processor can accommodate most, but not all cases of 2-branch-per-cycle without penalty.",
        "SampleAfterValue": "200003",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of times a decode restriction reduces the decode throughput due to wrong instruction length prediction.",
        "EventCode": "0xe9",
        "EventName": "DECODE_RESTRICTION.PREDECODE_WRONG",
        "SampleAfterValue": "200003",
        "UMask": "0x1",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Decode Stream Buffer (DSB)-to-MITE transitions count.",
        "CounterMask": "1",
        "EdgeDetect": "1",
        "EventCode": "0x61",
        "EventName": "DSB2MITE_SWITCHES.COUNT",
        "PublicDescription": "Counts the number of Decode Stream Buffer (DSB a.k.a. Uop Cache)-to-MITE speculative transitions.",
        "SampleAfterValue": "100003",
        "UMask": "0x2",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "DSB-to-MITE switch true penalty cycles.",
        "EventCode": "0x61",
        "EventName": "DSB2MITE_SWITCHES.PENALTY_CYCLES",
        "PublicDescription": "Decode Stream Buffer (DSB) is a Uop-cache that holds translations of previously fetched instructions that were decoded by the legacy x86 decode pipeline (MITE). This event counts fetch penalty cycles when a transition occurs from DSB to MITE.",
        "SampleAfterValue": "100003",
        "UMask": "0x2",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Count number of times a valid Decode Stream Buffer (DSB) fill has been actually cancelled for any reason.",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.ALL_CANCEL",
        "PublicDescription": "This event counts the number of times when a valid Decode Stream Buffer (DSB) fill has been actually cancelled not because of exceeding the way limit. Cancelling Decode Stream Buffer (DSB) fill may also result, for example, from Decode Stream Buffer Queue (DSBQ) snoop hits. This is because the Decode Stream Buffer (DSB) full hit is guaranteed to delivery from Decode Stream Buffer (DSB). In the B step a four-bit counter will count the number of cancel operations and will reverse the priority upon look ing up the same set.",
        "SampleAfterValue": "1000003",
        "UMask": "0xa",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles when Decode Stream Buffer (DSB) fill encounter more than 3 Decode Stream Buffer (DSB) lines",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.EXCEED_DSB_LINES",
        "PublicDescription": "This event counts cycles when the Decode Stream Buffer (DSB) fill encounter more than three Decode Stream Buffer (DSB) lines in a 32-byte piece of code.  The additional lines over 3 are cancelled fills.",
        "SampleAfterValue": "1000003",
        "UMask": "0x8",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Count number of times a valid DSB fill has been actually cancelled for any reason.",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.OTHER_CANCEL",
        "PublicDescription": "This event counts the number of times when a valid DSB fill has been actually cancelled not because of exceeding the way limit. Cancelling DSB fill may also result, for example, from DSBQ snoop hits. This is because the DSB full hit is guaranteed to delivery from DSB. In the B step a four-bit counter will count the number of cancel operations and will reverse the priority upon look ing up the same set.",
        "SampleAfterValue": "1000003",
        "UMask": "0x2",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Fill encountered successful fetch-line fill",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.SUCCESSFUL",
        "PublicDescription": "This event counts successful fetch-line fills of the DSB Fill.",
        "SampleAfterValue": "2000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "DSB flush occurrences",
        "EdgeDetect": "1",
        "EventCode": "0x64",
        "EventName": "DSB_MISC.FLUSH",
        "PublicDescription": "This event counts overall Decode Stream Buffer (DSB) flushes (occurrences).",
        "SampleAfterValue": "100003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Count number of times 'bad BAClears' where the BAClear target missed the DSB.",
        "EventCode": "0x63",
        "EventName": "DSB_QUEUE.BACLEAR_DSB_MISS",
        "SampleAfterValue": "1000003",
        "UMask": "0x2",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Count number of times 'bad JEClears' where the JEClear target missed the DSB.",
        "EventCode": "0x63",
        "EventName": "DSB_QUEUE.JECLEAR_DSB_MISS",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged with having preceded with frontend bound behavior",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.ALL",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Retired ANT branches",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.ANY_ANT",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x9",
        "PEBS": "1",
        "PublicDescription": "Always Not Taken (ANT) conditional retired branches (no BTB entry and not mispredicted)",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired Instructions who experienced DSB miss.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.ANY_DSB_MISS",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x1",
        "PEBS": "1",
        "PublicDescription": "Counts retired Instructions that experienced DSB (Decode stream buffer i.e. the decoded instruction-cache) miss.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired Instructions who experienced DSB miss.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.BPCLEAR",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x1B",
        "PEBS": "1",
        "PublicDescription": "Counts retired Instructions that experienced DSB (Decode stream buffer i.e. the decoded instruction-cache) miss.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of instruction retired that are tagged after a branch instruction causes bubbles/empty issue slots due to a baclear",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.BRANCH_DETECT",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x2",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instruction retired that are tagged after a branch instruction causes bubbles /empty issue slots due to a btclear",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.BRANCH_RESTEER",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x40",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged following an ms flow due to the bubble/wasted issue slot from exiting long ms flow",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.CISC",
        "PEBS": "1",
        "PublicDescription": "Counts the number of  instructions retired that were tagged following an ms flow due to the bubble/wasted issue slot from exiting long ms flow",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged every cycle the decoder is unable to send 4 uops",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.DECODE",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x8",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Retired Instructions who experienced a critical DSB miss.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.DSB_MISS",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x11",
        "PEBS": "1",
        "PublicDescription": "Number of retired Instructions that experienced a critical DSB (Decode stream buffer i.e. the decoded instruction-cache) miss. Critical means stalls were exposed to the back-end as a result of the DSB miss.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to icache miss",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.ICACHE",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x20",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Retired Instructions who experienced iTLB true miss.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.ITLB_MISS",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x14",
        "PEBS": "1",
        "PublicDescription": "Counts retired Instructions that experienced iTLB (Instruction TLB) true miss.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to ITLB miss",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.ITLB_MISS",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x10",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Retired Instructions who experienced Instruction L1 Cache true miss.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.L1I_MISS",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x12",
        "PEBS": "1",
        "PublicDescription": "Counts retired Instructions who experienced Instruction L1 Cache true miss.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired Instructions who experienced Instruction L2 Cache true miss.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.L2_MISS",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x13",
        "PEBS": "1",
        "PublicDescription": "Counts retired Instructions who experienced Instruction L2 Cache true miss.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions after front-end starvation of at least 1 cycle",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_1",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x600106",
        "PEBS": "1",
        "PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of at least 1 cycle which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 128 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_128",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x608006",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 128 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 16 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_16",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x601006",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are delivered to the back-end after a front-end stall of at least 16 cycles. During this period the front-end delivered no uops.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions after front-end starvation of at least 2 cycles",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_2",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x600206",
        "PEBS": "1",
        "PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of at least 2 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 256 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_256",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x610006",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 256 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end had at least 1 bubble-slot for a period of 2 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x100206",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are delivered to the back-end after the front-end had at least 1 bubble-slot for a period of 2 cycles. A bubble-slot is an empty issue-pipeline slot while there was no RAT stall.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end had at least 2 bubble-slots for a period of 2 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_2",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x200206",
        "PEBS": "1",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end had at least 3 bubble-slots for a period of 2 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_3",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x300206",
        "PEBS": "1",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 32 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_32",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x602006",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are delivered to the back-end after a front-end stall of at least 32 cycles. During this period the front-end delivered no uops.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 4 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_4",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x600406",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 4 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 512 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_512",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x620006",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 512 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 64 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_64",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x604006",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 64 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 8 cycles which was not interrupted by a back-end stall.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_8",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x600806",
        "PEBS": "1",
        "PublicDescription": "Counts retired instructions that are delivered to the back-end after a front-end stall of at least 8 cycles. During this period the front-end delivered no uops.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Mispredicted Retired ANT branches",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.MISP_ANT",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x9",
        "PEBS": "1",
        "PublicDescription": "ANT retired branches that got just mispredicted",
        "SampleAfterValue": "100007",
        "UMask": "0x2",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "FRONTEND_RETIRED.MS_FLOWS",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.MS_FLOWS",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x8",
        "PEBS": "1",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of instruction retired tagged after a wasted issue slot if none of the previous events occurred",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.OTHER",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x80",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instruction retired that are tagged after a branch instruction causes bubbles/empty issue slots due to a predecode wrong",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.PREDECODE",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x4",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Retired Instructions who experienced STLB (2nd level TLB) true miss.",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.STLB_MISS",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x15",
        "PEBS": "1",
        "PublicDescription": "Counts retired Instructions that experienced STLB (2nd level TLB) true miss.",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "FRONTEND_RETIRED.UNKNOWN_BRANCH",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.UNKNOWN_BRANCH",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x17",
        "PEBS": "1",
        "SampleAfterValue": "100007",
        "UMask": "0x3",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to Instruction L1 cache miss, that hit in the L2 cache.",
        "EventCode": "0xc9",
        "EventName": "FRONTEND_RETIRED_SOURCE.ICACHE_L2_HIT",
        "PEBS": "1",
        "PublicDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to Instruction L1 cache miss, that hit in the L2 cache.  Includes L2 Hit resulting from and L1D eviction of another core in the same module which is longer latency than a typical L2 hit.",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to Instruction L1 cache miss, that hit in the L3 cache, and did not have to snoop another core.",
        "EventCode": "0xc9",
        "EventName": "FRONTEND_RETIRED_SOURCE.ICACHE_L3_HIT_NO_SNOOP",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x2",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to Instruction L1 cache miss, that hit in the L3 cache, and required a snoop (that resulted in a snoop miss, snoop hitm, snoop hit with fwd, or snoop hit with no fwd).",
        "EventCode": "0xc9",
        "EventName": "FRONTEND_RETIRED_SOURCE.ICACHE_L3_HIT_WITH_SNOOP",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x4",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to Instruction L1 cache miss that that also missed in the L2 and L3 cache.",
        "EventCode": "0xc9",
        "EventName": "FRONTEND_RETIRED_SOURCE.ICACHE_L3_MISS",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x8",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to ITLB miss that hit in the second level TLB.",
        "EventCode": "0xc9",
        "EventName": "FRONTEND_RETIRED_SOURCE.ITLB_STLB_HIT",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x10",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of instructions retired that were tagged because empty issue slots were seen before the uop due to ITLB miss that also missed the second level TLB.",
        "EventCode": "0xc9",
        "EventName": "FRONTEND_RETIRED_SOURCE.ITLB_STLB_MISS",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x20",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts every time the code stream enters into a new cache line by walking sequential from the previous line or being redirected by a jump.",
        "EventCode": "0x80",
        "EventName": "ICACHE.ACCESSES",
        "SampleAfterValue": "200003",
        "UMask": "0x3",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts every time the code stream enters into a new cache line by walking sequential from the previous line or being redirected by a jump and the instruction cache registers bytes are present.",
        "EventCode": "0x80",
        "EventName": "ICACHE.HIT",
        "SampleAfterValue": "200003",
        "UMask": "0x1",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts every time the code stream enters into a new cache line by walking sequential from the previous line or being redirected by a jump and the instruction cache registers bytes are not present. -",
        "EventCode": "0x80",
        "EventName": "ICACHE.MISSES",
        "SampleAfterValue": "200003",
        "UMask": "0x2",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "ICACHE_DATA.HIT",
        "EventCode": "0x80",
        "EventName": "ICACHE_DATA.HIT",
        "SampleAfterValue": "2000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Number of Instruction Cache, Streaming Buffer and Victim Cache Misses. Includes Uncacheable accesses.",
        "EventCode": "0x80",
        "EventName": "ICACHE_DATA.MISS",
        "SampleAfterValue": "200003",
        "UMask": "0x2",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles where a code fetch is stalled due to L1 instruction cache miss.",
        "EventCode": "0x80",
        "EventName": "ICACHE_DATA.STALLS",
        "PublicDescription": "Counts cycles where a code line fetch is stalled due to an L1 instruction cache miss. The decode pipeline works at a 32 Byte granularity.",
        "SampleAfterValue": "500009",
        "UMask": "0x4",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "ICACHE_DATA.STALL_PERIODS",
        "CounterMask": "1",
        "EdgeDetect": "1",
        "EventCode": "0x80",
        "EventName": "ICACHE_DATA.STALL_PERIODS",
        "SampleAfterValue": "500009",
        "UMask": "0x4",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Instruction fetch tag lookups that hit in the instruction cache (L1I). Counts at 64-byte cache-line granularity.",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.HIT",
        "PublicDescription": "Counts instruction fetch tag lookups that hit in the instruction cache (L1I). Counts at 64-byte cache-line granularity. Accounts for both cacheable and uncacheable accesses.",
        "SampleAfterValue": "200003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Instruction fetch tag lookups that miss in the instruction cache (L1I). Counts at 64-byte cache-line granularity.",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.MISS",
        "PublicDescription": "Counts instruction fetch tag lookups that miss in the instruction cache (L1I). Counts at 64-byte cache-line granularity. Accounts for both cacheable and uncacheable accesses.",
        "SampleAfterValue": "200003",
        "UMask": "0x2",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles where a code fetch is stalled due to L1 instruction cache tag miss.",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.STALLS",
        "PublicDescription": "Counts cycles where a code fetch is stalled due to L1 instruction cache tag miss.",
        "SampleAfterValue": "200003",
        "UMask": "0x4",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "ICACHE_TAG.STALLS_INUSE",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.STALLS_INUSE",
        "SampleAfterValue": "200003",
        "UMask": "0x10",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "ICACHE_TAG.STALLS_ISB",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.STALLS_ISB",
        "SampleAfterValue": "200003",
        "UMask": "0x8",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles Decode Stream Buffer (DSB) is delivering any Uop",
        "CounterMask": "1",
        "EventCode": "0x79",
        "EventName": "IDQ.DSB_CYCLES_ANY",
        "PublicDescription": "Counts the number of cycles uops were delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path.",
        "SampleAfterValue": "2000003",
        "UMask": "0x8",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles DSB is delivering optimal number of Uops",
        "CounterMask": "8",
        "EventCode": "0x79",
        "EventName": "IDQ.DSB_CYCLES_OK",
        "PublicDescription": "Counts the number of cycles where optimal number of uops was delivered to the Instruction Decode Queue (IDQ) from the DSB (Decode Stream Buffer) path. During these cycles uops are not being delivered from the Decode Stream Buffer (DSB).",
        "SampleAfterValue": "2000003",
        "UMask": "0x8",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Uops delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path",
        "EventCode": "0x79",
        "EventName": "IDQ.DSB_UOPS",
        "PublicDescription": "Counts the number of uops delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path.",
        "SampleAfterValue": "2000003",
        "UMask": "0x8",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles MITE is delivering any Uop",
        "CounterMask": "1",
        "EventCode": "0x79",
        "EventName": "IDQ.MITE_CYCLES_ANY",
        "PublicDescription": "Counts the number of cycles uops were delivered to the Instruction Decode Queue (IDQ) from the MITE (legacy decode pipeline) path. During these cycles uops are not being delivered from the Decode Stream Buffer (DSB).",
        "SampleAfterValue": "2000003",
        "UMask": "0x4",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles MITE is delivering optimal number of Uops",
        "CounterMask": "8",
        "EventCode": "0x79",
        "EventName": "IDQ.MITE_CYCLES_OK",
        "PublicDescription": "Counts the number of cycles where optimal number of uops was delivered to the Instruction Decode Queue (IDQ) from the MITE (legacy decode pipeline) path. During these cycles uops are not being delivered from the Decode Stream Buffer (DSB).",
        "SampleAfterValue": "2000003",
        "UMask": "0x4",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Uops delivered to Instruction Decode Queue (IDQ) from MITE path",
        "EventCode": "0x79",
        "EventName": "IDQ.MITE_UOPS",
        "PublicDescription": "Counts the number of uops delivered to Instruction Decode Queue (IDQ) from the MITE path. This also means that uops are not being delivered from the Decode Stream Buffer (DSB).",
        "SampleAfterValue": "2000003",
        "UMask": "0x4",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles when uops are being delivered to IDQ while MS is busy",
        "CounterMask": "1",
        "EventCode": "0x79",
        "EventName": "IDQ.MS_CYCLES_ANY",
        "PublicDescription": "Counts cycles during which uops are being delivered to Instruction Decode Queue (IDQ) while the Microcode Sequencer (MS) is busy. Uops maybe initiated by Decode Stream Buffer (DSB) or MITE.",
        "SampleAfterValue": "2000003",
        "UMask": "0x20",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Number of switches from DSB or MITE to the MS",
        "CounterMask": "1",
        "EdgeDetect": "1",
        "EventCode": "0x79",
        "EventName": "IDQ.MS_SWITCHES",
        "PublicDescription": "Number of switches from DSB (Decode Stream Buffer) or MITE (legacy decode pipeline) to the Microcode Sequencer.",
        "SampleAfterValue": "100003",
        "UMask": "0x20",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Uops initiated by MITE or Decode Stream Buffer (DSB) and delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy",
        "EventCode": "0x79",
        "EventName": "IDQ.MS_UOPS",
        "PublicDescription": "Counts the number of uops initiated by MITE or Decode Stream Buffer (DSB) and delivered to Instruction Decode Queue (IDQ) while the Microcode Sequencer (MS) is busy. Counting includes uops that may 'bypass' the IDQ.",
        "SampleAfterValue": "1000003",
        "UMask": "0x20",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "This event counts a subset of the Topdown Slots event that were no operation was delivered to the back-end pipeline due to instruction fetch limitations when the back-end could have accepted more operations. Common examples include instruction cache misses or x86 instruction decode limitations.",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CORE",
        "PublicDescription": "This event counts a subset of the Topdown Slots event that were no operation was delivered to the back-end pipeline due to instruction fetch limitations when the back-end could have accepted more operations. Common examples include instruction cache misses or x86 instruction decode limitations.\nThe count may be distributed among unhalted logical processors (hyper-threads) who share the same physical core, in processors that support Intel Hyper-Threading Technology. Software can use this event as the numerator for the Frontend Bound metric (or top-level category) of the Top-down Microarchitecture Analysis method.",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles when no uops are not delivered by the IDQ when backend of the machine is not stalled",
        "CounterMask": "8",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_0_UOPS_DELIV.CORE",
        "PublicDescription": "Counts the number of cycles when no uops were delivered by the Instruction Decode Queue (IDQ) to the back-end of the pipeline when there was no back-end stalls.",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles when optimal number of uops was delivered to the back-end when the back-end is not stalled",
        "CounterMask": "1",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_FE_WAS_OK",
        "Invert": "1",
        "PublicDescription": "Counts the number of cycles when the optimal number of uops were delivered by the Instruction Decode Queue (IDQ) to the back-end of the pipeline when there was no back-end stalls.",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles per thread when 1 or less uops were delivered by the front end.",
        "CounterMask": "8",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_GE_1_UOP_DELIV.CORE",
        "Invert": "1",
        "SampleAfterValue": "2000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles per thread when less than 1 uop is delivered by the front end.",
        "CounterMask": "7",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_LE_1_UOP_DELIV.CORE",
        "SampleAfterValue": "2000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles per thread when 2 or less uops were delivered by the front end.",
        "CounterMask": "6",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_LE_2_UOP_DELIV.CORE",
        "SampleAfterValue": "2000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles per thread when 3 or less uops were delivered by the front end.",
        "CounterMask": "5",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_LE_3_UOP_DELIV.CORE",
        "SampleAfterValue": "2000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles per thread when 4 or less uops were delivered by the front end.",
        "CounterMask": "4",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_LE_4_UOP_DELIV.CORE",
        "SampleAfterValue": "2000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles per thread when 5 or less uops were delivered by the front end.",
        "CounterMask": "3",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_LE_5_UOP_DELIV.CORE",
        "SampleAfterValue": "2000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles per thread when 6 or less uops were delivered by the front end.",
        "CounterMask": "2",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_LE_6_UOP_DELIV.CORE",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles per thread when 7 or less uops were delivered by the front end.",
        "CounterMask": "1",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.CYCLES_LE_7_UOP_DELIV.CORE",
        "SampleAfterValue": "1000003",
        "UMask": "0x1",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Cycles when no uops are delivered by the IDQ for 2 or more cycles when backend of the machine is not stalled - normally indicating a Fetch Latency issue",
        "EventCode": "0x9c",
        "EventName": "IDQ_BUBBLES.FETCH_LATENCY",
        "PublicDescription": "Counts the number of cycles when no uops were delivered by the Instruction Decode Queue (IDQ) to the back-end of the pipeline when there was no back-end stalls for 2 or more cycles - normally indicating a Fetch Latency issue.",
        "SampleAfterValue": "1000003",
        "UMask": "0x4",
        "Unit": "cpu_atom"
    },
    {
        "BriefDescription": "Counts the number of cycles that the MS is busy.",
        "EventCode": "0xe7",
        "EventName": "MS_DECODED.MS_BUSY",
        "SampleAfterValue": "1000003",
        "UMask": "0x4",
        "Unit": "cpu_core"
    },
    {
        "BriefDescription": "Counts the number of times entered into a ucode flow in the FEC.  Includes inserted flows due to front-end detected faults or assists.",
        "EventCode": "0xe7",
        "EventName": "MS_DECODED.MS_ENTRY",
        "SampleAfterValue": "200003",
        "UMask": "0x1",
        "Unit": "cpu_core"
    }
]
